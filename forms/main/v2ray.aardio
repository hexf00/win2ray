import fonts.fontAwesome;
import win.ui;
import win.ui.atom;
/*DSG{{*/
var frmV2ray = win.form(text="win2ray ";right=959;bottom=591;bgcolor=16777215)
frmV2ray.add(
btnImportServerFromClipBd={cls="plus";text="批量导入链接";left=577;top=364;right=710;bottom=400;align="left";db=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=12}};iconText='\uF196 ';notify=1;textPadding={left=30};z=8};
btnTcping={cls="plus";text="自动选择响应最快服务器";left=712;top=366;right=941;bottom=398;align="left";bgcolor=11580047;border={radius=4};db=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=18}};iconText='\uF012';notify=1;textPadding={left=42};z=3};
btnUpdatePac={cls="plus";text="更新PAC文件";left=442;top=364;right=574;bottom=400;align="left";db=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=12}};iconText='\uF1C4';notify=1;textPadding={left=30};z=7};
edit={cls="edit";left=6;top=405;right=953;bottom=585;bgcolor=0;color=16777215;db=1;dl=1;dr=1;edge=1;hscroll=1;multiline=1;vscroll=1;z=2};
listview={cls="listview";left=4;top=5;right=954;bottom=358;db=1;dl=1;dr=1;dt=1;edge=1;fullRow=1;z=1};
radioProxy={cls="radiobutton";text="全局代理";left=148;top=370;right=245;bottom=395;bgcolor=16777215;db=1;dl=1;font=LOGFONT(h=-13);z=4};
radioProxyDirect={cls="radiobutton";text="不使用代理";left=33;top=370;right=139;bottom=395;bgcolor=16777215;db=1;dl=1;font=LOGFONT(h=-13);z=6};
radioProxyPac={cls="radiobutton";text="PAC代理";left=253;top=370;right=340;bottom=395;bgcolor=16777215;db=1;dl=1;font=LOGFONT(h=-13);z=5}
)
/*}}*/

frmV2ray.show();
frmV2ray.listview.insertColumn("类型",100) 
frmV2ray.listview.insertColumn("服务器",200) 
frmV2ray.listview.insertColumn("端口",70) 
frmV2ray.listview.insertColumn("加密",90) 
frmV2ray.listview.insertColumn("协议",50) 
frmV2ray.listview.insertColumn("响应速度",80) 
frmV2ray.listview.insertColumn("状态",-1) 

import config;
import v2ray.core; 
var activeOutbound = function(outboundIndex,outboundAddress){
	if( v2ray.core.restart(frmV2ray.edit,config.proxy.outbounds[outboundIndex]) ){
		
		..thread.invoke( 
			function(frmV2ray,outboundIndex,outboundAddress,port){
				
				import wsock.tcp.socks5Client;
				
				var client;
				for(i=1;5;1){
					sleep(1000);
					client = wsock.tcp.socks5Client("127.0.0.1",port); 
					if(client)break;
				}
				if(!client){
					frmV2ray.onStartV2rayFailed(outboundIndex);
					return;
				};
				
				client.setTimeouts(1000,1000);
				if(client.connect("www.google.com",80) ){
					var sendData =/***********
GET /  HTTP/1.1
Host: www.google.com
Connection: close
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64)
Accept: */*;  
Accept-Language: zh-CN,zh; 
Accept-Charset:utf-8;  
***********/
					client.write( sendData + '\r\n\r\n' )
					var rep = client.read(9);
					client.close();
					
					if(outboundAddress!=frmV2ray.listview.getItemText(outboundIndex,2)){
						return;
					}
				
					if( rep && ..string.startWith(rep,"HTTP/1.1 ") ){
						
						import inet.http;
						var http = inet.http(,"SOCKS=127.0.0.1:"+port);
						http.setTimeouts(1000,2000,2000);
						var html = http.get("https://www.google.com");
						http.close();
						
						if( html ){
							frmV2ray.onStartV2rayComplete(outboundIndex);
							return;	
						}
					} 
				}
				
				frmV2ray.onStartV2rayFailed(outboundIndex);
			},frmV2ray,outboundIndex,outboundAddress,v2ray.core.getPort()
		)
	}	
}

frmV2ray.onStartV2rayComplete = function(outboundIndex){
	frmV2ray.listview.ensureVisible(outboundIndex);
	frmV2ray.listview.setItemText("活动服务器：正常",outboundIndex,7);
	frmV2ray.edit.print("已切换到服务器：",frmV2ray.listview.getItemText(outboundIndex,2));

		if(frmV2ray.listview.getItemText(outboundIndex,6)=="不可用"){
			frmV2ray.listview.setItemText("...",outboundIndex,6);
		}
		
	frmV2ray.onTcpingReturn = function(){}
	frmV2ray.btnTcping.disabledText = null;
}

frmV2ray.onStartV2rayFailed = function(outboundIndex){
	frmV2ray.listview.ensureVisible(outboundIndex);
	frmV2ray.listview.setItemText("活动服务器：异常",outboundIndex,7);
	frmV2ray.edit.print("已切换到服务器：",frmV2ray.listview.getItemText(outboundIndex,2)); 
	frmV2ray.btnTcping.disabledText = null;
}

var tcping = function(frmV2ray,outboundIndex,address){ 
	import wsock.tcp.client; 
	var item = frmV2ray.listview.items[outboundIndex];
	
	var timeout = 0; 
	for(i=1;8;1){ 
		var client = wsock.tcp.client(); 	
		var tickBegin = time.tick(); 
		if(client.connectTimeout(item[2],tonumber(item[3]),3)){
			var ret = client.send("."); 
			client.close();
			
			if( ret != 1){ 
				frmV2ray.listview.setItemText("不可用",outboundIndex,6);
				frmV2ray.onTcpingReturn(outboundIndex,address,false);
				return;
			}
			timeout =  timeout + (time.tick() - tickBegin);
		}
		else {
			client.close();
			frmV2ray.listview.setItemText("不可用",outboundIndex,6);
			frmV2ray.onTcpingReturn(outboundIndex,address,false);
			return;
		} 
	}
	
	frmV2ray.onTcpingReturn(outboundIndex,address,true);
	frmV2ray.listview.setItemText(math.round(timeout / 8 / 1000,2)+"秒",outboundIndex,6);
};

import style;
frmV2ray.btnTcping.skin(style.primaryButton);
frmV2ray.btnTcping.oncommand = function(id,event){
	
	var items = frmV2ray.listview.items;
	if(#items){
		frmV2ray.btnTcping.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
		if(!v2ray.core.getPath()){
			frmV2ray.btnTcping.disabledText = null;
			frmV2ray.msgErr("下载 v2ray.exe 失败")
			return;
		}
		
		frmV2ray.onTcpingReturn = function(outboundIndex,address,succeeded){
			if(address!=frmV2ray.listview.getItemText(outboundIndex,2)){
				return; 
			}
			
			if(succeeded){
				frmV2ray.onTcpingReturn = function(outboundIndex){}
				activeOutbound(outboundIndex,address);	
			}
		}
		
		for b,v in table.eachIndex(config.proxy.outbounds){
			frmV2ray.listview.setItemText("...",b,6);
			frmV2ray.listview.setItemText("",b,7);
		}
		
		var handles = {}	
		thread.createSuspended(true);
		for(i=1;#items;1){
			var h = thread.create(tcping,frmV2ray,i,frmV2ray.listview.getItemText(i,2));	 
			table.push(handles,h);
		} 
		thread.createSuspended(false);
		
		for(i=1;#handles;1){
			var h = handles[i];	 
			thread.resume(h);
			raw.closehandle(h);
		} 
		
		..thread.waitOne(handles);
		frmV2ray.btnTcping.disabledText = null;
	}
	else {
		if(id) frmV2ray.msgWarn("请先添加服务器")
	}
}

frmV2ray.onDestroy = function(){
	v2ray.core.stop();
}

frmV2ray.listview.onnotify = function(id,code,ptr){
	select(code) {
		case  0xFFFFFFFD/*_NM_DBLCLK*/ {
			var nm = frmV2ray.listview.getNotifyMessage(code,ptr);
			if( nm ){
				frmV2ray.onTcpingReturn = function(i){}
				frmV2ray.btnTcping.disabledText = null;
				
				for b,v in table.eachIndex(config.proxy.outbounds){
					frmV2ray.listview.setItemText("",b,7);
				}
				activeOutbound(nm.iItem,frmV2ray.listview.getItemText(nm.iItem,2)); 
			}
		}
		case 0xFFFFFFFB/*_NM_RCLICK*/  {
			var x,y = win.getCursorPos();
			var nm = frmV2ray.listview.getNotifyMessage(code,ptr);
			if(!nm) return;
			
			var currentIdx = nm.iItem;
			var popmenu = win.ui.popmenu(frmV2ray);
			popmenu.add('设为活动服务器( 鼠标双击 )',function(id){
				if(currentIdx){
					frmV2ray.onTcpingReturn = function(i){}
					frmV2ray.btnTcping.disabledText = null;
					
					for b,v in table.eachIndex(config.proxy.outbounds){
						frmV2ray.listview.setItemText("",b,7);
					}
					activeOutbound(currentIdx,frmV2ray.listview.getItemText(currentIdx,2))
				}
			});
			popmenu.add('复制服务器链接',function(id){
				if(currentIdx){
					import v2ray.config;
					import win.clip;
					
					var str = v2ray.config.exportToString({config.proxy.outbounds[currentIdx]});
					if(str){ 
						win.clip.write(str); 
						frmV2ray.edit.print("已复制链接:",str);
					}  
				}
			});
			popmenu.add();
			popmenu.add('删除服务器',function(id){
				if(currentIdx){
					frmV2ray.listview.delItem(currentIdx);
					..table.remove(config.proxy.outbounds,currentIdx);
					publish("config.proxy.outbounds.config.changed");
				}
			});
			popmenu.popup(x,y,true);
		}
	}
}

subscribe("config.proxy.outbounds.changed",function(){
	config.proxy.outbounds.fields = {"protocol";"address";"port";"security";"network"};
	frmV2ray.listview.setTable(config.proxy.outbounds);	
	
	frmV2ray.btnTcping.oncommand();
} )

import process;
process.kill("v2ray.exe");
if(#config.proxy.outbounds){
	frmV2ray.setTimeout( 
		function(){
			publish("config.proxy.outbounds.changed");	
		},1000
	);	
}

subscribe("config.proxy.mode.changed",function(...){
	frmV2ray.radioProxyPac.checked = false;
	frmV2ray.radioProxy.checked = false;
	frmV2ray.radioProxyDirect.checked = false;
	
	if(config.proxy.mode = "pac"){
		frmV2ray.radioProxyPac.checked = true;
	}
	elseif(config.proxy.mode = "proxy"){
		frmV2ray.radioProxy.checked = true;
	}
	else{
		frmV2ray.radioProxyDirect.checked = true;
	}	
} )
publish("config.proxy.mode.changed");

var updatProxySetting = function(){
	if(frmV2ray.radioProxyPac.checked){
		config.proxy.mode = "pac";
		inet.conn.setProxyAutoConfig(,v2ray.core.getPacUrl() )		
	}
	elseif(frmV2ray.radioProxy.checked){
		config.proxy.mode = "proxy";
		inet.conn.setProxy(,"SOCKS=127.0.0.1:"+v2ray.core.getPort());	
	}
	else {
		config.proxy.mode = "direct";
		inet.conn.setProxy();	
	}
	
	config.proxy.save();
}
frmV2ray.radioProxyPac.oncommand = updatProxySetting;
frmV2ray.radioProxy.oncommand = updatProxySetting;
frmV2ray.radioProxyDirect.oncommand = updatProxySetting;

import win.dlg.message
win.dlg.message.install()
frmV2ray.btnUpdatePac.skin(style.plainButton)
frmV2ray.btnUpdatePac.oncommand = function(id,event){
	frmV2ray.btnUpdatePac.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'} 
	thread.invoke( 
		function(frmV2ray){
			import crypt;
			import web.rest.jsonLiteClient;
			
			var http = web.rest.jsonLiteClient();
			var github = http.api("https://api.github.com");
			
			var result = github.repos["petronny"]["gfwlist2pac"].contents["gfwlist.pac"].get();
			if(result[["content"]] && result[["encoding"]]=="base64"){
				content = crypt.decodeBin(result[["content"]]);
				string.save(..io.appData("/win2ray/pac.txt"), content);
				frmV2ray.msgOk("PAC文件已更新到最新版本");
			}	
			else {
				frmV2ray.msgFrown("PAC文件更新失败，建议开启全局代理后重试。")
			}
			frmV2ray.btnUpdatePac.disabledText = null;
		},frmV2ray
	)
}

frmV2ray.btnImportServerFromClipBd.skin(style.plainButton)
frmV2ray.btnImportServerFromClipBd.oncommand = function(id,event){
	var outbounds = v2ray.config.importFromClip();
	if(#outbounds){
		..table.append(config.proxy.outbounds,outbounds); 
		publish("config.proxy.outbounds.changed");
		publish("config.proxy.outbounds.config.changed");
		frmV2ray.msgOk("已成功导入" + #outbounds + "个服务器"); 
		return; 
	}

	frmV2ray.msgFrown("未导入服务器, 请先复制 vmess:// 或 ss:// 链接！")
}

return win.loopMessage();
